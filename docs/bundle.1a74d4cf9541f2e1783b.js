(()=>{"use strict";var n={56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],s=0;s<n.length;s++){var d=n[s],c=t.base?d[0]+t.base:d[0],l=o[c]||0,A="".concat(c," ").concat(l);o[c]=l+1;var p=r(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=a(m,t);t.byIndex=s,e.splice(s,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=r(o[i]);e[s].references--}for(var d=t(n,a),c=0;c<o.length;c++){var l=r(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=d}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},594:(n,e,r)=>{r.d(e,{A:()=>s});var t=r(354),a=r.n(t),o=r(314),i=r.n(o)()(a());i.push([n.id,":root {\n    --primary-color: #4a6fa5;\n    --secondary-color: #166088;\n    --accent-color: #4fc3dc;\n    --light-color: #bdc7d7;\n    --dark-color: #333;\n    --success-color: #28a745;\n    --warning-color: #ffc107;\n    --danger-color: #dc3545;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    line-height: 1.6;\n    color: var(--dark-color);\n    background-color: #f5f5f5;\n    overflow-x: hidden;\n    position: relative;\n    min-height: 100vh;\n}\n\nh2 {\n    text-align: center;\n    font-size: 2.5rem; /* Ukuran font lebih besar */\n    margin-bottom: 30px; /* Jarak dengan konten di bawah */\n    color: var(--primary-color); /* Warna yang sesuai dengan tema */\n    position: relative;\n    padding-bottom: 15px;\n  }\n  \n  /* Menambahkan garis dekoratif di bawah h2 */\n  h2:after {\n    content: '';\n    position: absolute;\n    width: 100px;\n    height: 4px;\n    background: var(--primary-color);\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    border-radius: 2px;\n  }\n\n/*login*/\n/* Tambahkan kode ini ke dalam file style.css Anda */\n\n/* Styling untuk halaman login */\n.login-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    background-color: #f7f9fc;\n    padding: 20px;\n  }\n  \n  .login-wrapper {\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    max-width: 400px;\n    width: 100%;\n    padding: 30px;\n  }\n  \n  .login-header {\n    text-align: center;\n    margin-bottom: 30px;\n  }\n  \n  .login-header i {\n    font-size: 3rem;\n    color: #3182ce;\n    margin-bottom: 10px;\n  }\n  \n  .login-header h1 {\n    font-size: 2rem;\n    color: #2d3748;\n    margin: 0;\n  }\n  \n  .form-container {\n    width: 100%;\n  }\n  \n  .form-container h2 {\n    text-align: center;\n    margin-bottom: 20px;\n    color: #4a5568;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .form-group label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 500;\n    color: #4a5568;\n  }\n  \n  .form-group input {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #e2e8f0;\n    border-radius: 4px;\n    font-size: 16px;\n    transition: border-color 0.3s ease;\n  }\n  \n  .form-group input:focus {\n    border-color: #3182ce;\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);\n  }\n  \n  .btnlogin {\n    display: block;\n    width: 100%;\n    padding: 12px;\n    border: none;\n    border-radius: 30px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .btn-primary {\n    background-color: #3182ce;\n    color: white;\n  }\n  \n  .btn-primary:hover {\n    background-color: #2b6cb0;\n  }\n  \n  .btnlogin:disabled {\n    background-color: #a0aec0;\n    cursor: not-allowed;\n  }\n\n/* Skip to Content */\n.skip-link {\n    position: absolute;\n    left: 0;\n    top: -999px;\n    background-color: var(--primary-color);\n    color: white;\n    padding: 8px 16px;\n    z-index: 100;\n    text-decoration: none;\n}\n\n.skip-link:focus {\n    top: 0;\n}\n\n/* Header Styles */\nheader {\n    background-color: var(--primary-color);\n    color: white;\n    padding: 1rem;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    position: sticky;\n    top: 0;\n    z-index: 10;\n}\n\n.header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.logo {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.5rem;\n    font-weight: bold;\n    text-decoration: none;\n    color: white;\n}\n\nnav ul {\n    display: flex;\n    list-style: none;\n    gap: 20px;\n}\n\nnav a {\n    color: white;\n    text-decoration: none;\n    padding: 8px 12px;\n    border-radius: 4px;\n    transition: background-color 0.3s;\n}\n\nnav a:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n}\n\nnav a.active {\n    background-color: rgba(255, 255, 255, 0.2);\n    font-weight: bold;\n}\n\n.hamburger-menu {\n    display: none;\n    cursor: pointer;\n    font-size: 1.5rem;\n}\n\n/* Main Content */\nmain {\n    max-width: 1200px;\n    margin: 2rem auto;\n    padding: 0 1rem;\n    min-height: calc(100vh - 240px);\n    view-transition-name: main-content;\n}\n\n/* Home Page */\n.hero {\n    background-color: var( --light-color);\n    color: var(--dark-color);\n    text-align: center;\n    padding: 3rem 1rem;\n    border-radius: 8px;\n    margin-bottom: 2rem;\n}\n\n.hero h1 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n}\n\n.hero p {\n    font-size: 1rem;\n    max-width: 800px;\n    text-align: justify;\n    margin: 0 auto 1.5rem;\n}\n\n.btn {\n    display: inline-block;\n    background-color: var(--primary-color);\n    color: white;\n    padding: 15px 30px;\n    border-radius: 30px;\n    text-decoration: none;\n    font-weight: 600;\n    transition: background-color 0.3s;\n    border: none;\n    cursor: pointer;\n}\n\n.btn:hover {\n    background-color: #3aa8c1;\n}\n\n/* Products List */\n.products-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    gap: 2rem;\n}\n\n.product-card {\n    background-color: white;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s;\n}\n\n.product-card:hover {\n    transform: translateY(-5px);\n}\n\n.product-image {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n}\n\n.product-info {\n    padding: 1.5rem;\n}\n\n.product-title {\n    font-size: 1.2rem;\n    margin-bottom: 0.5rem;\n    color: var(--dark-color);\n}\n\n.product-price {\n    font-weight: bold;\n    color: var(--secondary-color);\n    font-size: 1.2rem;\n    margin-bottom: 0.5rem;\n}\n\n.product-description {\n    color: #666;\n    margin-bottom: 1rem;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n}\n\n.product-location {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #777;\n    font-size: 0.9rem;\n}\n\n/* Map */\n.map-container {\n    height: 500px;\n    margin-top: 2rem;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n#map {\n    height: 100%;\n    width: 100%;\n}\n\n/* Form Styles */\n.form-container {\n    background-color: white;\n    padding: 2rem;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.form-title {\n    margin-bottom: 1.5rem;\n    color: var(--secondary-color);\n}\n\n.form-group {\n    margin-bottom: 1.5rem;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n}\n\ninput[type=\"text\"],\ninput[type=\"number\"],\ntextarea {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n}\n\n.camera-container {\n    margin-top: 10px;\n    position: relative;\n}\n\n#videoElement {\n    width: 100%;\n    height: 300px;\n    background-color: #eee;\n    border-radius: 4px;\n    display: none;\n}\n\n#capturedImage {\n    max-width: 100%;\n    max-height: 300px;\n    border-radius: 4px;\n    display: none;\n}\n\n.camera-buttons {\n    display: flex;\n    gap: 10px;\n    margin-top: 10px;\n}\n\n/* Location Map */\n.location-map-container {\n    height: 300px;\n    margin-top: 10px;\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n#locationMap {\n    height: 100%;\n    width: 100%;\n}\n\n.coordinates-display {\n    margin-top: 10px;\n    font-size: 14px;\n    color: #666;\n}\n\n/* Footer */\nfooter {\n    background-color: var(--primary-color);\n    color: white;\n    text-align: center;\n    padding: 1rem;\n    margin-top: 2rem;\n}\n\n.footer-content {\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n/* Loading Animation */\n.loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 200px;\n}\n\n.loading-spinner {\n    border: 4px solid rgba(0, 0, 0, 0.1);\n    border-radius: 50%;\n    border-top: 4px solid var(--primary-color);\n    width: 40px;\n    height: 40px;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n/* Error Message */\n.error-message {\n    background-color: #fff3f3;\n    border-left: 4px solid var(--danger-color);\n    padding: 1rem;\n    margin-bottom: 1rem;\n    color: var(--danger-color);\n}\n\n/* Success Message */\n.success-message {\n    background-color: #f0fff0;\n    border-left: 4px solid var(--success-color);\n    padding: 1rem;\n    margin-bottom: 1rem;\n    color: var(--success-color);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n\n    .hero h1, h2 {\n        font-size: 1.5rem;\n    }\n\n    p{\n        font-size: 1rem;\n    }\n\n    .hamburger-menu {\n        display: block;\n    }\n    \n    nav {\n        position: absolute;\n        top: 70px;\n        left: 0;\n        right: 0;\n        background-color: var(--primary-color);\n        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n        padding: 1rem;\n        transform: translateY(-150%);\n        transition: transform 0.3s;\n    }\n    \n    nav.active {\n        transform: translateY(0);\n    }\n    \n    nav ul {\n        flex-direction: column;\n        gap: 10px;\n    }\n    \n    .products-container {\n        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n    }\n}\n\n/* View Transition */\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.page-transition {\n    view-transition-name: page;\n}\n\n::view-transition-old(page) {\n    animation: 0.25s fadeIn reverse ease-in-out;\n}\n\n::view-transition-new(page) {\n    animation: 0.25s fadeIn ease-in-out;\n}","",{version:3,sources:["webpack://./styles/style.css"],names:[],mappings:"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",sourcesContent:[":root {\r\n    --primary-color: #4a6fa5;\r\n    --secondary-color: #166088;\r\n    --accent-color: #4fc3dc;\r\n    --light-color: #bdc7d7;\r\n    --dark-color: #333;\r\n    --success-color: #28a745;\r\n    --warning-color: #ffc107;\r\n    --danger-color: #dc3545;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    line-height: 1.6;\r\n    color: var(--dark-color);\r\n    background-color: #f5f5f5;\r\n    overflow-x: hidden;\r\n    position: relative;\r\n    min-height: 100vh;\r\n}\r\n\r\nh2 {\r\n    text-align: center;\r\n    font-size: 2.5rem; /* Ukuran font lebih besar */\r\n    margin-bottom: 30px; /* Jarak dengan konten di bawah */\r\n    color: var(--primary-color); /* Warna yang sesuai dengan tema */\r\n    position: relative;\r\n    padding-bottom: 15px;\r\n  }\r\n  \r\n  /* Menambahkan garis dekoratif di bawah h2 */\r\n  h2:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100px;\r\n    height: 4px;\r\n    background: var(--primary-color);\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-radius: 2px;\r\n  }\r\n\r\n/*login*/\r\n/* Tambahkan kode ini ke dalam file style.css Anda */\r\n\r\n/* Styling untuk halaman login */\r\n.login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    background-color: #f7f9fc;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .login-wrapper {\r\n    background-color: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    max-width: 400px;\r\n    width: 100%;\r\n    padding: 30px;\r\n  }\r\n  \r\n  .login-header {\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  .login-header i {\r\n    font-size: 3rem;\r\n    color: #3182ce;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .login-header h1 {\r\n    font-size: 2rem;\r\n    color: #2d3748;\r\n    margin: 0;\r\n  }\r\n  \r\n  .form-container {\r\n    width: 100%;\r\n  }\r\n  \r\n  .form-container h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    color: #4a5568;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group label {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    font-weight: 500;\r\n    color: #4a5568;\r\n  }\r\n  \r\n  .form-group input {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    transition: border-color 0.3s ease;\r\n  }\r\n  \r\n  .form-group input:focus {\r\n    border-color: #3182ce;\r\n    outline: none;\r\n    box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);\r\n  }\r\n  \r\n  .btnlogin {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: none;\r\n    border-radius: 30px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #3182ce;\r\n    color: white;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #2b6cb0;\r\n  }\r\n  \r\n  .btnlogin:disabled {\r\n    background-color: #a0aec0;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n/* Skip to Content */\r\n.skip-link {\r\n    position: absolute;\r\n    left: 0;\r\n    top: -999px;\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    padding: 8px 16px;\r\n    z-index: 100;\r\n    text-decoration: none;\r\n}\r\n\r\n.skip-link:focus {\r\n    top: 0;\r\n}\r\n\r\n/* Header Styles */\r\nheader {\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    padding: 1rem;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n}\r\n\r\n.header-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.logo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: white;\r\n}\r\n\r\nnav ul {\r\n    display: flex;\r\n    list-style: none;\r\n    gap: 20px;\r\n}\r\n\r\nnav a {\r\n    color: white;\r\n    text-decoration: none;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\nnav a:hover {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\nnav a.active {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    font-weight: bold;\r\n}\r\n\r\n.hamburger-menu {\r\n    display: none;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n}\r\n\r\n/* Main Content */\r\nmain {\r\n    max-width: 1200px;\r\n    margin: 2rem auto;\r\n    padding: 0 1rem;\r\n    min-height: calc(100vh - 240px);\r\n    view-transition-name: main-content;\r\n}\r\n\r\n/* Home Page */\r\n.hero {\r\n    background-color: var( --light-color);\r\n    color: var(--dark-color);\r\n    text-align: center;\r\n    padding: 3rem 1rem;\r\n    border-radius: 8px;\r\n    margin-bottom: 2rem;\r\n}\r\n\r\n.hero h1 {\r\n    font-size: 2.5rem;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.hero p {\r\n    font-size: 1rem;\r\n    max-width: 800px;\r\n    text-align: justify;\r\n    margin: 0 auto 1.5rem;\r\n}\r\n\r\n.btn {\r\n    display: inline-block;\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    padding: 15px 30px;\r\n    border-radius: 30px;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    transition: background-color 0.3s;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn:hover {\r\n    background-color: #3aa8c1;\r\n}\r\n\r\n/* Products List */\r\n.products-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n    gap: 2rem;\r\n}\r\n\r\n.product-card {\r\n    background-color: white;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s;\r\n}\r\n\r\n.product-card:hover {\r\n    transform: translateY(-5px);\r\n}\r\n\r\n.product-image {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n}\r\n\r\n.product-info {\r\n    padding: 1.5rem;\r\n}\r\n\r\n.product-title {\r\n    font-size: 1.2rem;\r\n    margin-bottom: 0.5rem;\r\n    color: var(--dark-color);\r\n}\r\n\r\n.product-price {\r\n    font-weight: bold;\r\n    color: var(--secondary-color);\r\n    font-size: 1.2rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.product-description {\r\n    color: #666;\r\n    margin-bottom: 1rem;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 3;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n}\r\n\r\n.product-location {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    color: #777;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/* Map */\r\n.map-container {\r\n    height: 500px;\r\n    margin-top: 2rem;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#map {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n/* Form Styles */\r\n.form-container {\r\n    background-color: white;\r\n    padding: 2rem;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-title {\r\n    margin-bottom: 1.5rem;\r\n    color: var(--secondary-color);\r\n}\r\n\r\n.form-group {\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 600;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"number\"],\r\ntextarea {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n}\r\n\r\n.camera-container {\r\n    margin-top: 10px;\r\n    position: relative;\r\n}\r\n\r\n#videoElement {\r\n    width: 100%;\r\n    height: 300px;\r\n    background-color: #eee;\r\n    border-radius: 4px;\r\n    display: none;\r\n}\r\n\r\n#capturedImage {\r\n    max-width: 100%;\r\n    max-height: 300px;\r\n    border-radius: 4px;\r\n    display: none;\r\n}\r\n\r\n.camera-buttons {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n/* Location Map */\r\n.location-map-container {\r\n    height: 300px;\r\n    margin-top: 10px;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n}\r\n\r\n#locationMap {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n.coordinates-display {\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n    color: #666;\r\n}\r\n\r\n/* Footer */\r\nfooter {\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n    text-align: center;\r\n    padding: 1rem;\r\n    margin-top: 2rem;\r\n}\r\n\r\n.footer-content {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n/* Loading Animation */\r\n.loading {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 200px;\r\n}\r\n\r\n.loading-spinner {\r\n    border: 4px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 50%;\r\n    border-top: 4px solid var(--primary-color);\r\n    width: 40px;\r\n    height: 40px;\r\n    animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Error Message */\r\n.error-message {\r\n    background-color: #fff3f3;\r\n    border-left: 4px solid var(--danger-color);\r\n    padding: 1rem;\r\n    margin-bottom: 1rem;\r\n    color: var(--danger-color);\r\n}\r\n\r\n/* Success Message */\r\n.success-message {\r\n    background-color: #f0fff0;\r\n    border-left: 4px solid var(--success-color);\r\n    padding: 1rem;\r\n    margin-bottom: 1rem;\r\n    color: var(--success-color);\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n\r\n    .hero h1, h2 {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    p{\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .hamburger-menu {\r\n        display: block;\r\n    }\r\n    \r\n    nav {\r\n        position: absolute;\r\n        top: 70px;\r\n        left: 0;\r\n        right: 0;\r\n        background-color: var(--primary-color);\r\n        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n        padding: 1rem;\r\n        transform: translateY(-150%);\r\n        transition: transform 0.3s;\r\n    }\r\n    \r\n    nav.active {\r\n        transform: translateY(0);\r\n    }\r\n    \r\n    nav ul {\r\n        flex-direction: column;\r\n        gap: 10px;\r\n    }\r\n    \r\n    .products-container {\r\n        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n    }\r\n}\r\n\r\n/* View Transition */\r\n@keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n.page-transition {\r\n    view-transition-name: page;\r\n}\r\n\r\n::view-transition-old(page) {\r\n    animation: 0.25s fadeIn reverse ease-in-out;\r\n}\r\n\r\n::view-transition-new(page) {\r\n    animation: 0.25s fadeIn ease-in-out;\r\n}"],sourceRoot:""}]);const s=i},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0;var t=r(72),a=r.n(t),o=r(825),i=r.n(o),s=r(659),d=r.n(s),c=r(56),l=r.n(c),A=r(540),p=r.n(A),m=r(113),u=r.n(m),g=r(594),h={};h.styleTagTransform=u(),h.setAttributes=l(),h.insert=d().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=p(),a()(g.A,h),g.A&&g.A.locals&&g.A.locals;const B=class{constructor(){this.baseUrl="https://story-api.dicoding.dev/v1",this.token=localStorage.getItem("token")||null}setToken(n){this.token=n,n?localStorage.setItem("token",n):localStorage.removeItem("token")}getToken(){return this.token}async register(n,e,r){try{const t=await fetch(`${this.baseUrl}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:n,email:e,password:r})}),a=await t.json();if(a.error)throw new Error(a.message);return a}catch(n){throw console.error("Error pendaftaran:",n),new Error("Gagal mendaftar. Silakan coba lagi nanti.")}}async login(n,e){try{const r=await fetch(`${this.baseUrl}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:n,password:e})}),t=await r.json();if(t.error)throw new Error(t.message);return t.loginResult?.token&&(this.setToken(t.loginResult.token),localStorage.setItem("userId",t.loginResult.userId),localStorage.setItem("userName",t.loginResult.name)),t}catch(n){throw console.error("Error login:",n),new Error("Gagal login. Silakan coba lagi nanti.")}}logout(){this.setToken(null),localStorage.removeItem("userId"),localStorage.removeItem("userName")}async getAllStories(n=1,e=10,r=0){try{let t=`${this.baseUrl}/stories?page=${n}&size=${e}&location=${r}`,a={};this.token&&(a.Authorization=`Bearer ${this.token}`);const o=await fetch(t,{headers:a}),i=await o.json();if(i.error)throw new Error(i.message);return i.listStory||[]}catch(n){throw console.error("Error mengambil cerita:",n),new Error("Gagal memuat cerita. Silakan coba lagi nanti.")}}async getAllStories(n=1,e=30,r=1){const t=localStorage.getItem("token"),a=`https://story-api.dicoding.dev/v1/stories?page=${n}&size=${e}&location=${r}`;try{const n=await fetch(a,{headers:{Authorization:`Bearer ${t}`}}),e=await n.json();if("caches"in window){const e=await caches.open("dicoding-stories-cache");await e.put(a,n.clone())}return e.listStory}catch(n){if(console.warn("Gagal fetch dari network, coba ambil dari cache"),"caches"in window){const n=await caches.open("dicoding-stories-cache"),e=await n.match(a);if(e)return(await e.json()).listStory}throw new Error("Tidak bisa memuat data produk. Coba lagi nanti.")}}async addStory(n,e,r=null,t=null){try{if(!this.token)throw new Error("Autentikasi diperlukan untuk menambahkan cerita");const a=new FormData;a.append("description",n),a.append("photo",e),null!==r&&a.append("lat",r),null!==t&&a.append("lon",t);const o=await fetch(`${this.baseUrl}/stories`,{method:"POST",headers:{Authorization:`Bearer ${this.token}`},body:a}),i=await o.json();if(i.error)throw new Error(i.message);return i}catch(n){throw console.error("Error menambahkan cerita:",n),new Error("Gagal menambahkan cerita. Silakan coba lagi nanti.")}}async addStoryAsGuest(n,e,r=null,t=null){try{const a=new FormData;a.append("description",n),a.append("photo",e),null!==r&&a.append("lat",r),null!==t&&a.append("lon",t);const o=await fetch(`${this.baseUrl}/stories/guest`,{method:"POST",body:a}),i=await o.json();if(i.error)throw new Error(i.message);return i}catch(n){throw console.error("Error menambahkan cerita sebagai tamu:",n),new Error("Gagal menambahkan cerita. Silakan coba lagi nanti.")}}async registerServiceWorker(){if(!("serviceWorker"in navigator))throw new Error("Service worker tidak didukung oleh browser ini");try{const n=await navigator.serviceWorker.register("/sw.js");return console.log("Pendaftaran ServiceWorker berhasil:",n),n}catch(n){throw console.error("Pendaftaran ServiceWorker gagal:",n),n}}urlBase64ToUint8Array(n){const e=(n+"=".repeat((4-n.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),r=window.atob(e),t=new Uint8Array(r.length);for(let n=0;n<r.length;++n)t[n]=r.charCodeAt(n);return t}async subscribeToPushNotifications(){try{if(!this.token)throw new Error("Autentikasi diperlukan untuk berlangganan notifikasi");const n=await navigator.serviceWorker.ready,e="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",r=await n.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this.urlBase64ToUint8Array(e)}),t=await fetch(`${this.baseUrl}/notifications/subscribe`,{method:"POST",headers:{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),a=await t.json();if(a.error)throw new Error(a.message);return a}catch(n){throw console.error("Error berlangganan notifikasi push:",n),new Error("Gagal berlangganan notifikasi. Silakan coba lagi nanti.")}}async unsubscribeFromPushNotifications(){try{if(!this.token)throw new Error("Autentikasi diperlukan untuk berhenti berlangganan notifikasi");const n=await navigator.serviceWorker.ready,e=await n.pushManager.getSubscription();if(!e)return console.log("Tidak ada langganan untuk dibatalkan"),{error:!1,message:"Tidak ada langganan aktif"};await e.unsubscribe();const r=await fetch(`${this.baseUrl}/notifications/subscribe`,{method:"DELETE",headers:{Authorization:`Bearer ${this.token}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:e.endpoint})}),t=await r.json();if(t.error)throw new Error(t.message);return t}catch(n){throw console.error("Error berhenti berlangganan notifikasi push:",n),new Error("Gagal berhenti berlangganan notifikasi. Silakan coba lagi nanti.")}}},b=class{constructor({view:n,apiService:e}){this._view=n,this._apiService=e}async login(n,e){try{this._view.showLoading(),await this._apiService.login(n,e),this._view.onLoginSuccess()}catch(n){this._view.showError(n.message)}finally{this._view.hideLoading()}}},f=class{constructor({view:n,apiService:e}){this._view=n,this._apiService=e}async getAllProducts(){try{this._view.showLoading();const n=await this._apiService.getAllStories(1,30,1);n&&0!==n.length?this._view.showProducts(n):this._view.showProductsEmpty()}catch(n){this._view.showError(n.message)}finally{this._view.hideLoading()}}async getProductDetail(n){try{this._view.showLoading();const e=await this._apiService.getStoryDetail(n);e?this._view.showProductDetail(e):this._view.showError("Cerita tidak ditemukan")}catch(n){this._view.showError(n.message)}finally{this._view.hideLoading()}}async addProduct(n){try{this._view.showLoading();const{description:e,photo:r,lat:t,lon:a}=n,o=await this._apiService.addStory(e,r,t,a);return this._view.showSuccess("Produk berhasil ditambahkan!"),o}catch(n){throw this._view.showError(n.message),n}finally{this._view.hideLoading()}}submitAddProductForm({form:n,description:e,photo:r,lat:t,lon:a}){if(!(e&&r&&t&&a))return void this._view.showError("Harap lengkapi semua field yang diperlukan.");const o={description:e,photo:r,lat:t,lon:a};this.addProduct(o).then((()=>{n.reset(),this._view.resetFormUI(),setTimeout((()=>{window.location.hash="#/products"}),1500)})).catch((n=>{console.error("Gagal menambahkan produk:",n)}))}},C=(n,e)=>e.some((e=>n instanceof e));let v,I;const y=new WeakMap,k=new WeakMap,w=new WeakMap;let x={get(n,e,r){if(n instanceof IDBTransaction){if("done"===e)return y.get(n);if("store"===e)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return T(n[e])},set:(n,e,r)=>(n[e]=r,!0),has:(n,e)=>n instanceof IDBTransaction&&("done"===e||"store"===e)||e in n};function E(n){x=n(x)}function S(n){return"function"==typeof n?(e=n,(I||(I=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...n){return e.apply(M(this),n),T(this.request)}:function(...n){return T(e.apply(M(this),n))}):(n instanceof IDBTransaction&&function(n){if(y.has(n))return;const e=new Promise(((e,r)=>{const t=()=>{n.removeEventListener("complete",a),n.removeEventListener("error",o),n.removeEventListener("abort",o)},a=()=>{e(),t()},o=()=>{r(n.error||new DOMException("AbortError","AbortError")),t()};n.addEventListener("complete",a),n.addEventListener("error",o),n.addEventListener("abort",o)}));y.set(n,e)}(n),C(n,v||(v=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(n,x):n);var e}function T(n){if(n instanceof IDBRequest)return function(n){const e=new Promise(((e,r)=>{const t=()=>{n.removeEventListener("success",a),n.removeEventListener("error",o)},a=()=>{e(T(n.result)),t()},o=()=>{r(n.error),t()};n.addEventListener("success",a),n.addEventListener("error",o)}));return w.set(e,n),e}(n);if(k.has(n))return k.get(n);const e=S(n);return e!==n&&(k.set(n,e),w.set(e,n)),e}const M=n=>w.get(n),P=["get","getKey","getAll","getAllKeys","count"],j=["put","add","delete","clear"],D=new Map;function z(n,e){if(!(n instanceof IDBDatabase)||e in n||"string"!=typeof e)return;if(D.get(e))return D.get(e);const r=e.replace(/FromIndex$/,""),t=e!==r,a=j.includes(r);if(!(r in(t?IDBIndex:IDBObjectStore).prototype)||!a&&!P.includes(r))return;const o=async function(n,...e){const o=this.transaction(n,a?"readwrite":"readonly");let i=o.store;return t&&(i=i.index(e.shift())),(await Promise.all([i[r](...e),a&&o.done]))[0]};return D.set(e,o),o}E((n=>({...n,get:(e,r,t)=>z(e,r)||n.get(e,r,t),has:(e,r)=>!!z(e,r)||n.has(e,r)})));const W=["continue","continuePrimaryKey","advance"],$={},q=new WeakMap,H=new WeakMap,F={get(n,e){if(!W.includes(e))return n[e];let r=$[e];return r||(r=$[e]=function(...n){q.set(this,H.get(this)[e](...n))}),r}};async function*U(...n){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...n)),!e)return;const r=new Proxy(e,F);for(H.set(r,e),w.set(r,M(e));e;)yield r,e=await(q.get(r)||e.continue()),q.delete(r)}function _(n,e){return e===Symbol.asyncIterator&&C(n,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===e&&C(n,[IDBIndex,IDBObjectStore])}E((n=>({...n,get:(e,r,t)=>_(e,r)?U:n.get(e,r,t),has:(e,r)=>_(e,r)||n.has(e,r)})));const O="products",Y=function(n,e,{blocked:r,upgrade:t,blocking:a,terminated:o}={}){const i=indexedDB.open(n,e),s=T(i);return t&&i.addEventListener("upgradeneeded",(n=>{t(T(i.result),n.oldVersion,n.newVersion,T(i.transaction),n)})),r&&i.addEventListener("blocked",(n=>r(n.oldVersion,n.newVersion,n))),s.then((n=>{o&&n.addEventListener("close",(()=>o())),a&&n.addEventListener("versionchange",(n=>a(n.oldVersion,n.newVersion,n)))})).catch((()=>{})),s}("aisyshop-db",1,{upgrade(n){n.objectStoreNames.contains(O)||n.createObjectStore(O,{keyPath:"id"})}}),N={putProduct:async n=>(await Y).put(O,n),getProductById:async n=>(await Y).get(O,n),getAllProducts:async()=>(await Y).getAll(O),removeProduct:async n=>(await Y).delete(O,n)},V=class{constructor(){this.element=null}render(){this.element=document.createElement("div"),this.element.classList.add("page-transition"),this.element.innerHTML='\n        <section class="not-found-container" role="alert">\n          <div class="not-found-content">\n            <i class="fas fa-exclamation-triangle fa-4x"></i>\n            <h1>Halaman Tidak Ditemukan</h1>\n            <p>Maaf, halaman yang Anda cari tidak tersedia.</p>\n            <a href="#/" class="btn">Kembali ke Beranda</a>\n          </div>\n        </section>\n      ';const n=document.createElement("style");return n.textContent="\n        .not-found-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          min-height: 60vh;\n        }\n        \n        .not-found-content {\n          text-align: center;\n          padding: 3rem;\n          background-color: white;\n          border-radius: 8px;\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n          max-width: 500px;\n        }\n        \n        .not-found-content i {\n          color: var(--warning-color);\n          margin-bottom: 1rem;\n        }\n        \n        .not-found-content h1 {\n          margin-bottom: 1rem;\n          color: var(--dark-color);\n        }\n        \n        .not-found-content p {\n          margin-bottom: 1.5rem;\n          color: #666;\n        }\n      ",document.head.appendChild(n),this.element}afterRender(){}};function R(n){const e=(n+"=".repeat((4-n.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),r=window.atob(e);return Uint8Array.from([...r].map((n=>n.charCodeAt(0))))}async function Q(){try{if(!await async function(){return"Notification"in window?"granted"===Notification.permission||"denied"!==Notification.permission&&"granted"===await Notification.requestPermission():(console.log("Browser tidak mendukung notifikasi"),!1)}())return void console.log("Permission notifikasi ditolak");const n=await navigator.serviceWorker.ready;if(await n.pushManager.getSubscription())return void console.log("Already subscribed to push notifications");const e=await n.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:R("BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk")}),r=localStorage.getItem("token");if(!r)return;const t={endpoint:e.endpoint,keys:{p256dh:btoa(String.fromCharCode(...new Uint8Array(e.getKey("p256dh")))),auth:btoa(String.fromCharCode(...new Uint8Array(e.getKey("auth"))))}},a=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify(t)}),o=await a.json();!1===o.error?(console.log("Successfully subscribed to push notifications:",o),"granted"===Notification.permission&&new Notification("Push Notification Aktif!",{body:"Anda akan menerima notifikasi untuk story baru",icon:"/icon-192x192.png"})):console.error("Failed to subscribe:",o)}catch(n){console.error("Gagal subscribe push:",n)}}const G={"/":class{constructor(){this.element=null}render(){this.element=document.createElement("div"),this.element.classList.add("page-transition"),this.element.innerHTML='\n        <section class="hero" role="region" aria-labelledby="home-title">\n          <h1 id="home-title">Selamat Datang di AisyShop</h1>\n          <p>Belanja online jadi lebih menyenangkan dengan AisyShop! Dapatkan produk berkualitas premium dari ribuan partner terpercaya kami dengan harga yang bersaing. Nikmati promo spesial setiap hari, pengiriman super cepat ke seluruh Indonesia, dan jaminan uang kembali 100%. AisyShop hadir sebagai solusi kebutuhan gaya hidup modern Anda - dari fashion, elektronik, hingga kebutuhan rumah tangga, semua ada dalam satu platform!.</p>\n          <a href="#/products" class="btn">Mulai Belanja Sekarang</a>\n        </section>\n        \n        <section class="featured-section" role="region" aria-labelledby="featured-title">\n          <h2 id="featured-title">Mengapa Memilih Kami</h2>\n          <div class="featured-content">\n            <p>AisyShop memberikan pengalaman berbelanja online terbaik dengan berbagai keunggulan, antara lain:</p>\n            <div class="features">\n              <div class="feature">\n                <i class="fas fa-truck fa-2x"></i>\n                <h3>Pengiriman Cepat</h3>\n                <p>Produk dikirim langsung ke alamat Anda dengan cepat dan aman.</p>\n              </div>\n              \n              <div class="feature">\n                <i class="fas fa-shield-alt fa-2x"></i>\n                <h3>Pembayaran Aman</h3>\n                <p>Transaksi Anda dijamin aman dengan sistem pembayaran terpercaya.</p>\n              </div>\n              \n              <div class="feature">\n                <i class="fas fa-headset fa-2x"></i>\n                <h3>Layanan Pelanggan 24/7</h3>\n                <p>Tim kami siap membantu Anda kapan saja.</p>\n              </div>\n            </div>\n          </div>\n        </section>\n      ';const n=document.createElement("style");return n.textContent="\n\n        .featured-section h2 {\n          text-align: center;\n        }\n\n        .featured-content {\n          margin-top: 2rem;\n          text-align: center;\n        }\n        \n        .features {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n          gap: 2rem;\n          margin-top: 2rem;\n        }\n        \n        .feature {\n          background-color: white;\n          padding: 2rem;\n          border-radius: 8px;\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n          text-align: center;\n        }\n        \n        .feature i {\n          color: var(--primary-color);\n          margin-bottom: 1rem;\n        }\n        \n        .feature h3 {\n          margin-bottom: 1rem;\n          color: var(--secondary-color);\n        }\n\n        @media (max-width: 768px) {\n          .features {\n            grid-template-columns: 1fr;\n          }\n        }\n      ",document.head.appendChild(n),this.element}afterRender(){}},"/products":class{constructor(){this.element=null,this.apiService=new B,this.presenter=new f({view:this,apiService:this.apiService}),this.map=null,this.markers=[]}render(){return this.element=document.createElement("div"),this.element.classList.add("page-transition"),this.element.innerHTML='\n      <section role="region" aria-labelledby="products-title">\n        <h2 id="products-title">Produk</h2>\n        <div id="loading" class="loading"><div class="loading-spinner"></div></div>\n        <div id="error-container"></div>\n        <div id="products-container" class="products-container"></div>\n        <div class="map-container"><h2>Lokasi Produk</h2><div id="map"></div></div>\n      </section>\n    ',this.element}afterRender(){this.initMap(),this.presenter.getAllProducts()}initMap(){this.map=L.map("map").setView([-2.5,118],4),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(this.map)}showLoading(){document.getElementById("loading").style.display="flex"}hideLoading(){document.getElementById("loading").style.display="none"}showError(n){document.getElementById("error-container").innerHTML=`<div class="error-message"><p>${n}</p></div>`}async showProducts(n){const e=document.getElementById("products-container");e.innerHTML="",this.clearMarkers();for(const r of n){const n=document.createElement("div");n.classList.add("product-card");const t=new Date(r.createdAt).toLocaleDateString("id-ID"),a=await N.getProductById(r.id);n.innerHTML=`\n        <img src="${r.photoUrl}" class="product-image" alt="${r.description}">\n        <div class="product-info">\n          <h3 class="product-title">${r.name}</h3>\n          <p class="product-description">${r.description}</p>\n          <p class="product-location">\n            <i class="fas fa-map-marker-alt"></i> ${r.lat??"-"}, ${r.lon??"-"}\n          </p>\n          <p><small>Diposting: ${t}</small></p>\n          <div class="product-actions">\n            <button class="btn-save" id="save-btn-${r.id}">\n              ${a?"💖 Hapus dari Favorit":"🤍 Simpan ke Favorit"}\n            </button>\n          </div>\n        </div>\n      `,e.appendChild(n),document.getElementById(`save-btn-${r.id}`).addEventListener("click",(async()=>{await N.getProductById(r.id)?(await N.removeProduct(r.id),alert("Produk dihapus dari favorit.")):(await N.putProduct(r),alert("Produk disimpan ke favorit!")),this.presenter.getAllProducts()})),r.lat&&r.lon&&this.addMarker(r)}if(this.markers.length){const n=L.featureGroup(this.markers);this.map.fitBounds(n.getBounds(),{padding:[50,50]})}}showProductsEmpty(){document.getElementById("products-container").innerHTML='\n      <div class="empty-state">\n        <i class="fas fa-box-open fa-3x"></i>\n        <h2>Tidak ada produk</h2>\n        <p>Belum ada produk tersedia saat ini.</p>\n        <a href="#/add" class="btn">Tambah Produk</a>\n      </div>\n    '}addMarker(n){const e=L.marker([n.lat,n.lon]);e.bindPopup(`\n      <div class="popup-content">\n        <img src="${n.photoUrl}" alt="${n.description}" style="width:100%;max-height:150px;object-fit:cover;">\n        <h3>${n.name}</h3>\n        <p>${n.description}</p>\n      </div>\n    `),e.addTo(this.map),this.markers.push(e)}clearMarkers(){this.markers.forEach((n=>this.map.removeLayer(n))),this.markers=[]}},"/add":class{constructor(){this.element=null,this.apiService=new B,this.presenter=new f({view:this,apiService:this.apiService}),this.map=null,this.marker=null,this.latitude=null,this.longitude=null,this.photoBlob=null,this.mediaStream=null}render(){return this.element=document.createElement("div"),this.element.classList.add("page-transition"),this.element.innerHTML='\n      <section role="region" aria-labelledby="add-product-title">\n        <h2 id="add-product-title">Tambah Produk Baru</h2>\n        \n        <div id="loading" class="loading" style="display: none;">\n          <div class="loading-spinner"></div>\n        </div>\n        \n        <div id="message-container"></div>\n        \n        <div class="form-container">\n          <form id="addProductForm">\n            <div class="form-group">\n              <label for="nama">Nama Produk </label>\n              <input type="text" id="nama" name="nama" rows="4" required></input>\n            </div>\n\n            <div class="form-group">\n              <label for="description">Deskripsi Produk </label>\n              <textarea id="description" name="description" rows="4" required></textarea>\n            </div>\n            \n            <div class="form-group">\n              <label>Foto Produk </label>\n              <div class="camera-container">\n                <video id="videoElement" autoplay></video>\n                <img id="capturedImage" alt="Foto produk yang diambil">\n                <div class="camera-buttons">\n                  <button type="button" id="startCameraBtn" class="btn">\n                    <i class="fas fa-camera"></i> Buka Kamera\n                  </button>\n                  <button type="button" id="captureBtn" class="btn" disabled>\n                    <i class="fas fa-camera-retro"></i> Ambil Foto\n                  </button>\n                  <button type="button" id="retakeBtn" class="btn" style="display: none;">\n                    <i class="fas fa-redo"></i> Ambil Ulang\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div class="form-group">\n              <label>Lokasi Produk </label>\n              <p>Klik pada peta untuk menentukan lokasi produk</p>\n              <div class="location-map-container">\n                <div id="locationMap"></div>\n              </div>\n              <div id="coordinates-display" class="coordinates-display">\n                Belum ada lokasi yang dipilih\n              </div>\n            </div>\n            \n            <button type="submit" id="submitBtn" class="btn" disabled>\n              <i class="fas fa-plus-circle"></i> Tambah Produk\n            </button>\n          </form>\n        </div>\n      </section>\n    ',this.element}afterRender(){this.initMap(),this.initCameraButtons(),this.initFormSubmission(),window.addEventListener("hashchange",(()=>this.stopCameraStream())),window.addEventListener("beforeunload",(()=>this.stopCameraStream()))}initMap(){this.map=L.map("locationMap").setView([-6.2088,106.8456],10),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(this.map),this.map.on("click",(n=>{this.setLocation(n.latlng.lat,n.latlng.lng)}))}setLocation(n,e){this.latitude=n,this.longitude=e,document.getElementById("coordinates-display").innerHTML=`\n      Lokasi dipilih: ${n.toFixed(6)}, ${e.toFixed(6)}\n    `,this.marker&&this.map.removeLayer(this.marker),this.marker=L.marker([n,e]).addTo(this.map),this.checkFormValidity()}initCameraButtons(){const n=document.getElementById("startCameraBtn"),e=document.getElementById("captureBtn"),r=document.getElementById("retakeBtn"),t=document.getElementById("videoElement"),a=document.getElementById("capturedImage");n.addEventListener("click",(async()=>{try{this.mediaStream=await navigator.mediaDevices.getUserMedia({video:!0}),t.srcObject=this.mediaStream,t.style.display="block",e.disabled=!1,n.disabled=!0}catch(n){console.error("Error accessing camera:",n),this.showError("Tidak dapat mengakses kamera. Pastikan Anda memberikan izin dan kamera tersedia.")}})),e.addEventListener("click",(()=>{const n=document.createElement("canvas"),o=n.getContext("2d");n.width=t.videoWidth,n.height=t.videoHeight,o.drawImage(t,0,0,n.width,n.height),n.toBlob((n=>{this.photoBlob=n,a.src=URL.createObjectURL(n),a.style.display="block",this.stopCameraStream(),t.style.display="none",e.style.display="none",r.style.display="inline-block",this.checkFormValidity()}),"image/jpeg",.8)})),r.addEventListener("click",(()=>{a.style.display="none",a.src="",this.photoBlob=null,n.disabled=!1,e.style.display="inline-block",r.style.display="none",this.checkFormValidity()}))}stopCameraStream(){this.mediaStream&&(this.mediaStream.getTracks().forEach((n=>n.stop())),this.mediaStream=null)}initFormSubmission(){const n=document.getElementById("addProductForm"),e=document.getElementById("description");e.addEventListener("input",(()=>{this.checkFormValidity()})),n.addEventListener("submit",(r=>{r.preventDefault(),this.presenter.submitAddProductForm({form:n,description:e.value,photo:this.photoBlob,lat:this.latitude,lon:this.longitude})}))}isFormValid(){return document.getElementById("description").value&&this.photoBlob&&this.latitude&&this.longitude}checkFormValidity(){document.getElementById("submitBtn").disabled=!this.isFormValid()}showLoading(){document.getElementById("loading").style.display="flex"}hideLoading(){document.getElementById("loading").style.display="none"}showError(n){const e=document.getElementById("message-container");e.innerHTML=`\n      <div class="error-message">\n        <p>${n}</p>\n      </div>\n    `,setTimeout((()=>{e.innerHTML=""}),5e3)}showSuccess(n){const e=document.getElementById("message-container");e.innerHTML=`\n      <div class="success-message">\n        <p>${n}</p>\n      </div>\n    `,setTimeout((()=>{e.innerHTML=""}),5e3)}resetFormUI(){document.getElementById("capturedImage").style.display="none",document.getElementById("capturedImage").src="",document.getElementById("retakeBtn").style.display="none",document.getElementById("startCameraBtn").disabled=!1,document.getElementById("captureBtn").style.display="inline-block",this.photoBlob=null,this.marker&&(this.map.removeLayer(this.marker),this.marker=null),this.latitude=null,this.longitude=null,document.getElementById("coordinates-display").innerHTML="Belum ada lokasi yang dipilih"}},"/favorite":class{constructor(){this.element=null}render(){return this.element=document.createElement("div"),this.element.classList.add("page-transition"),this.element.innerHTML='\n      <section role="region" aria-labelledby="favorites-title">\n        <h2 id="favorites-title" class="section-title">Produk Favorit Saya</h2>\n        <div id="loading" class="loading"><div class="loading-spinner"></div></div>\n        <div id="error-container"></div>\n        <div id="favorite-products-container" class="products-container"></div>\n      </section>\n    ',this.element}async afterRender(){try{this.showLoading();const n=document.getElementById("favorite-products-container");if(document.getElementById("error-container").innerHTML="",!N)throw new Error("Database tidak tersedia");const e=await N.getAllProducts();if(this.hideLoading(),!e||0===e.length)return void(n.innerHTML='\n          <div class="empty-state">\n            <i class="fas fa-heart-broken fa-3x"></i>\n            <h2>Belum ada produk favorit</h2>\n            <p>Simpan produk terlebih dahulu untuk muncul di sini.</p>\n            <a href="#/products" class="btn">Lihat Produk</a>\n          </div>\n        ');n.innerHTML="",e.forEach((e=>{const r=new Date(e.createdAt).toLocaleDateString("id-ID"),t=document.createElement("div");t.classList.add("product-card"),t.innerHTML=`\n          <img src="${e.photoUrl}" class="product-image" alt="${e.description}" loading="lazy">\n          <div class="product-info">\n            <h3 class="product-title">${e.name}</h3>\n            <p class="product-description">${e.description}</p>\n            <p class="product-location">\n              <i class="fas fa-map-marker-alt"></i> ${e.lat??"-"}, ${e.lon??"-"}\n            </p>\n            <p><small>Diposting: ${r}</small></p>\n            <div class="product-actions">\n              <button class="btn-remove" data-id="${e.id}">❌ Hapus dari Favorit</button>\n            </div>\n          </div>\n        `,n.appendChild(t)})),this.addEventListeners()}catch(n){this.hideLoading(),document.getElementById("error-container").innerHTML=`\n        <div class="error-message">\n          <i class="fas fa-exclamation-triangle"></i>\n          <p>Terjadi kesalahan saat memuat produk favorit: ${n.message}</p>\n          <button id="retry-button" class="btn">Coba Lagi</button>\n        </div>\n      `,document.getElementById("retry-button").addEventListener("click",(()=>{this.afterRender()})),console.error("Error loading favorite products:",n)}}addEventListeners(){document.querySelectorAll(".btn-remove").forEach((n=>{n.addEventListener("click",(async n=>{try{const e=n.target.dataset.id;if(!e)throw new Error("ID produk tidak valid");if(confirm("Apakah Anda yakin ingin menghapus produk ini dari favorit?")){n.target.innerHTML='<i class="fas fa-spinner fa-spin"></i> Menghapus...',n.target.disabled=!0,await N.removeProduct(e);const r=n.target.closest(".product-card");r.style.transition="opacity 0.5s",r.style.opacity="0",setTimeout((()=>{r.remove();const n=document.getElementById("favorite-products-container");n.children.length||(n.innerHTML='\n                  <div class="empty-state">\n                    <i class="fas fa-heart-broken fa-3x"></i>\n                    <h2>Belum ada produk favorit</h2>\n                    <p>Simpan produk terlebih dahulu untuk muncul di sini.</p>\n                    <a href="#/products" class="btn">Lihat Produk</a>\n                  </div>\n                '),this.showNotification("Produk berhasil dihapus dari favorit")}),500)}}catch(n){console.error("Error removing product:",n),this.showNotification("Gagal menghapus produk: "+n.message,"error")}}))}))}showNotification(n,e="success"){const r=document.querySelector(".notification");r&&r.remove();const t=document.createElement("div");t.className=`notification ${e}`,t.innerHTML=`\n      <div class="notification-content">\n        <i class="fas ${"success"===e?"fa-check-circle":"fa-exclamation-circle"}"></i>\n        <p>${n}</p>\n      </div>\n    `,document.body.appendChild(t),setTimeout((()=>{t.classList.add("show")}),10),setTimeout((()=>{t.classList.remove("show"),setTimeout((()=>{t.remove()}),300)}),3e3)}showLoading(){const n=document.getElementById("loading");n&&(n.style.display="flex")}hideLoading(){const n=document.getElementById("loading");n&&(n.style.display="none")}},"/login":class{constructor(){this.apiService=new B,this.presenter=new b({view:this,apiService:this.apiService})}render(){const n=document.createElement("div");return n.className="login-container",n.innerHTML='\n      <div class="login-wrapper">\n        <div class="login-header">\n          <i class="fas fa-store"></i>\n          <h1>AisyShop</h1>\n        </div>\n        <section class="form-container">\n          <form id="loginForm">\n            <div class="form-group">\n              <label for="email">Email</label>\n              <input type="email" id="email" required>\n            </div>\n            <div class="form-group">\n              <label for="password">Password</label>\n              <input type="password" id="password" required>\n            </div>\n            <button type="submit" class="btnlogin btn-primary">Login</button>\n          </form>\n        </section>\n      </div>\n    ',n}afterRender(){document.getElementById("loginForm").addEventListener("submit",(n=>{n.preventDefault();const e=document.getElementById("email").value,r=document.getElementById("password").value;this.presenter.login(e,r)}))}showLoading(){const n=document.querySelector('button[type="submit"]');n.disabled=!0,n.dataset.originalText=n.textContent,n.textContent="Loading..."}hideLoading(){const n=document.querySelector('button[type="submit"]');n.disabled=!1,n.textContent=n.dataset.originalText||"Login"}showError(n){alert(n)}onLoginSuccess(){alert("Login berhasil"),window.location.hash="#/"}}},K=(new B,n=>{const e=document.querySelector("header"),r=document.querySelector("footer");e.style.display=n?"block":"none",r.style.display=n?"block":"none"}),X=async()=>{const n=localStorage.getItem("token"),e=window.location.hash.slice(1)||"/",r="/login"===e;if(K(!!n),!n&&!r)return void(window.location.hash="#/login");if(n&&r)return void(window.location.hash="#/");const t=G[e]||V,a=document.getElementById("mainContent");try{if(document.startViewTransition)document.startViewTransition((()=>{a.innerHTML="";const n=new t;a.appendChild(n.render()),n.afterRender()}));else{a.innerHTML="";const n=new t;a.appendChild(n.render()),n.afterRender()}n&&J(e)}catch(n){console.error("Error rendering page:",n),a.innerHTML=`<div class="error-message">Terjadi kesalahan saat memuat halaman: ${n.message}</div>`}},J=n=>{document.querySelectorAll(".nav-link").forEach((n=>n.classList.remove("active")));const e=document.getElementById({"/":"homeLink","/products":"productsLink","/add":"addLink","/favorite":"favoriteLink"}[n]);e&&e.classList.add("active")},Z=()=>{const n=document.querySelector("nav ul");if(n&&!document.getElementById("logoutLink")){const e=document.createElement("li"),r=document.createElement("a");r.href="#",r.id="logoutLink",r.className="nav-link",r.textContent="Logout",r.addEventListener("click",(n=>{n.preventDefault(),localStorage.removeItem("token"),window.location.hash="#/login"})),e.appendChild(r),n.appendChild(e)}},nn=document.getElementById("hamburgerMenu"),en=document.querySelector("nav");nn&&en&&(nn.addEventListener("click",(()=>{en.classList.toggle("active")})),document.addEventListener("click",(n=>{en.contains(n.target)||nn.contains(n.target)||en.classList.remove("active")}))),document.addEventListener("DOMContentLoaded",(()=>{const n=document.querySelector("#mainContent"),e=document.querySelector(".skip-link");e&&n&&e.addEventListener("click",(function(r){r.preventDefault(),e.blur(),n.setAttribute("tabindex","-1"),n.focus(),n.scrollIntoView({behavior:"smooth"})}))})),window.addEventListener("load",(async()=>{await async function(){if(!("serviceWorker"in navigator))return console.log("Service Worker tidak didukung browser"),null;try{const n=await navigator.serviceWorker.register("/sw.bundle.js");return console.log("Service Worker terdaftar!",n),await navigator.serviceWorker.ready,console.log("Service Worker ready!"),n}catch(n){return console.error("SW gagal:",n),null}}(),await X(),localStorage.getItem("token")&&(Z(),setTimeout((async()=>{await Q()}),1e3))})),window.addEventListener("hashchange",X),window.addEventListener("storage",(n=>{"token"===n.key&&(K(!!n.newValue),n.newValue&&(Z(),setTimeout((async()=>{await Q()}),1e3)))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,